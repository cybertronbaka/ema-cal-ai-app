# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    require_trailing_commas: ignore
  exclude: [build/**, lib/**.freezed.dart, lib/**.g.dart]

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    require_trailing_commas: true
    always_declare_return_types: true
    always_use_package_imports: true
    annotate_overrides: true
    valid_regexps: true
    avoid_dynamic_calls: true
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables : true
    prefer_const_declarations: true
    use_decorated_box: true
    use_colored_box: true
    use_enums: true
    use_full_hex_values_for_flutter_colors: true
    use_function_type_syntax_for_parameters: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_key_in_widget_constructors: true
    use_rethrow_when_possible: true
    use_build_context_synchronously: true
    unnecessary_underscores: true
    unnecessary_to_list_in_spreads: true
    unnecessary_this: true
    unnecessary_string_interpolations: true
    unnecessary_string_escapes: true
    unnecessary_statements: true
    unnecessary_parenthesis: true
    unnecessary_overrides: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_null_checks: true
    unnecessary_new: true
    unnecessary_null_aware_operator_on_extension_on_nullable: true
    unnecessary_library_name: true
    unnecessary_late: true
    unnecessary_getters_setters: true
    unnecessary_constructor_name: true
    unnecessary_const: true
    unnecessary_breaks: false
    unnecessary_brace_in_string_interps: true
    unnecessary_await_in_return: true
    unawaited_futures: true
    type_literal_in_constant_pattern: true
    type_init_formals: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    sort_pub_dependencies: false
    sort_child_properties_last: true
    slash_for_doc_comments: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    recursive_getters: true
    provide_deprecation_message: true
    prefer_void_to_null: true
    prefer_typing_uninitialized_variables: true
    prefer_spread_collections: true
    prefer_null_aware_operators: true
    prefer_null_aware_method_calls: true
    prefer_mixin: true
    avoid_field_initializers_in_const_classes: true
    empty_constructor_bodies: true
    empty_catches: true
    exhaustive_cases: true
    avoid_unnecessary_containers: true
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
